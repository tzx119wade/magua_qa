# Task 1 记住密码
1. 分配API路径
2. 写API逻辑
3. 前台调用API

# 用户验证
1. 如果用户通过验证，request.user 就是实际的用户对象;request.auth就是一个Token
2. 如果用户没有通过验证，request.user = 匿名用户;request.auth = None


# Task 2 频道接口
1. 前端的item绑定一个v-on:click事件，

# 如果获取频道中的问题
1. 通过channel_id 去找对应的channel
2. 通过channel去找它下面所有问题
3. 然后找到该问题下的所有答案，再通过vote_count找出答案里面点赞数最多的一个，找出来后放到一个列表里
4. 然后对这个列表按照answer.created_date进行降序排序
5. 最后把这个问题列表放到AnswerSerializer进行json编码

# 如果需要分页

# task 前端的处理
1. 打开页面的时候，加载一个默认的频道，请求的时候传递的是默认的频道ID和page=1
2. 切换频道的时候调接口，传频道ID和page=1
3. 点击加载更多的以后，page_count += 1

# 按钮的状态跟当前频道的状态有关

# 可以通过引入jquery.js、semantic.js来创建modal视图
# dropdown组件如果要生效，需要写入必要的js语法来初始化，初始化方法最好写在body的尾巴处

# task 2017.05.17:前台发布问题的接口
1.前台v-model绑定了表单中的值，将值传递给接口
2.接口在请求中取出question类型的值，然后创建一个question对象
3.最后返回status
4.前台在成功的回调中关闭modal，然后弹出发布成功的提示
5.如果失败
